name: Deploy Chat App

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install backend dependencies
      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      # Step 4: Create .env file for backend
      - name: Create .env file
        run: |
          echo "PORT=5000" >> .env
          echo "MONGO_URI=mongodb://localhost:27017/chat-app" >> .env
          echo "USER_INACTIVE=1*60*1000" >> .env
        working-directory: ./backend

      # Step 5: Debug .env file
      - name: Debug .env file
        run: cat .env
        working-directory: ./backend

      # Step 6: Wait for MongoDB to be ready
      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB to be ready..."
          timeout 60 bash -c 'until mongo --eval "db.runCommand(\"ping\").ok" mongodb://localhost:27017/chat-app; do sleep 1; done'
          echo "MongoDB is ready!"

      # Step 7: Start backend server
      - name: Start backend server
        run: |
          npm start
        working-directory: ./backend

      # Step 8: Install frontend dependencies
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      # Step 9: Build Angular frontend
      - name: Build Angular frontend
        run: npm run build -- --configuration production
        working-directory: ./frontend

      # Step 10: Deploy frontend (example: to a server or S3)
      - name: Deploy frontend
        run: |
          # Add your deployment commands here
          # For example, if deploying to an S3 bucket:
          aws s3 sync ./frontend/dist/my-angular-app s3://your-s3-bucket-name --delete
        working-directory: ./frontend
