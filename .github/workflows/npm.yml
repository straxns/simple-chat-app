name: Deploy Chat App

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Step 1: Set up MongoDB service container
    services:
      mongodb:
        image: mongo:latest  # Use the latest MongoDB image
        ports:
          - 27017:27017      # Expose MongoDB on port 27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Step 2: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 3: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      # Step 4: Install backend dependencies
      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      # Step 5: Create .env file for backend
      - name: Create .env file
        run: |
          echo "PORT=5000" >> .env
          echo "MONGO_URI=mongodb://localhost:27017/chat-app" >> .env
          echo "USER_INACTIVE=1*60*1000" >> .env
        working-directory: ./backend

      # Step 6: Start backend server
      - name: Start backend server
        run: |
          npm start
        working-directory: ./backend

      # Step 7: Install frontend dependencies
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      # Step 8: Build Angular frontend
      - name: Build Angular frontend
        run: npm run build -- --configuration production
        working-directory: ./frontend

      # Step 9: Deploy frontend (example: to a server or S3)
      - name: Deploy frontend
        run: |
          # Add your deployment commands here
          # For example, if deploying to an S3 bucket:
          aws s3 sync ./frontend/dist/my-angular-app s3://your-s3-bucket-name --delete
        working-directory: ./frontend
